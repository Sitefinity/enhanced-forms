@model Sitefinity.EnhancedForms.Mvc.Models.DateField.DateFieldViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Models.Fields.TextField;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Services;

@Html.StyleSheet(Url.EmbeddedResource("Telerik.Sitefinity.Resources.Reference", "Telerik.Sitefinity.Resources.Scripts.Kendo.styles.kendo_common_min.css"), "head", false)
@if (SystemManager.IsDesignMode || SystemManager.IsPreviewMode)
{
    @Html.StyleSheet(Url.EmbeddedResource("Telerik.Sitefinity.Resources.Reference", "Telerik.Sitefinity.Resources.Scripts.Kendo.styles.kendo_bootstrap_min.css"), "bottom", false)
}
else
{
    @Html.StyleSheet(Url.EmbeddedResource("Telerik.Sitefinity.Resources.Reference", "Telerik.Sitefinity.Resources.Scripts.Kendo.styles.kendo_bootstrap_min.css"), "head", false)
}

<!-- InputCssClass class variable -->
@{
    var inputCssClass = "";
    HashSet<TextType> availableOptions = new HashSet<TextType>() { TextType.Date, TextType.DateTimeLocal, TextType.Month, TextType.Time };

    if (availableOptions.Contains(Model.InputType))
    {
        inputCssClass = "form-control";
    }

    var isRequired = Model.ValidatorDefinition.Required.HasValue && Model.ValidatorDefinition.Required.Value ? "true" : "false";
    var hasDescription = !string.IsNullOrEmpty(Model.MetaField.Description);
}

<style>
    .k-picker-wrap .k-tooltip {
        display: none !important;
    }

    .k-state-hover {
        background-color: unset !important;
        border-color: unset !important;
        border: 1px solid #ced4da !important
    }

    .k-state-hover .k-select {
        border-color: #ccc !important;
    }
</style>

<div class="@Model.CssClass form-group" data-sf-role="date-field-container">
    <input data-sf-role="violation-messages" type="hidden" value='{"required": "@Model.RequiredViolationMessage", "invalid": "@Html.Resource("InvalidEntryMessage")", "regularExpression": "@Model.ValidatorDefinition.RegularExpressionViolationMessage"}' />
    <label class="h6" for='@Html.UniqueId("Textbox")'>@Model.MetaField.Title</label>
    <input id='@Html.UniqueId("Textbox")'
           data-sf-input-type="@Model.InputType.ToString()"
           data-sf-role="date-field-input"
           type="text"
           class="@inputCssClass"
           name="@Model.MetaField.FieldName"
           placeholder="@Model.PlaceholderText"
           value="@Model.Value"
           aria-required="@isRequired"
           @Html.Raw(Model.ValidationAttributes)
           @{if (hasDescription) { <text> aria-describedby='@Html.UniqueId("TextboxInfo") @Html.UniqueId("TextboxErrorMessage")' </text>  } else { <text> aria-describedby='@Html.UniqueId("TextboxErrorMessage")' </text>  } } />
    @if (hasDescription)
    {
        <p id='@Html.UniqueId("TextboxInfo")' class="text-muted">@Model.MetaField.Description</p>
    }
    <div id='@Html.UniqueId("TextboxErrorMessage")' data-sf-role="error-message" role="alert" aria-live="assertive" class="text-danger"></div>
</div>

@if (!SystemManager.IsDesignMode || SystemManager.IsPreviewMode)
{
    @Html.Script(ScriptRef.JQuery, "top", false)
    @Html.Script(ScriptRef.KendoAll, "top", false)
    @Html.Script(Url.WidgetContent("Mvc/Scripts/DateField/date-field.js"), "bottom", false)
}